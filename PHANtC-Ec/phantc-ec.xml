<tool id="phantc-ec" name="PHANtC-Ec" version="2.3">
    <description>Clustering by chewBBACA for Escherichia coli</description>
    <requirements>
        <requirement type="package" version="3.8">python</requirement>
        <requirement type="package" version="2.8.5">chewbbaca</requirement>
        <requirement type="package" version="5.26">perl</requirement>
        <requirement type="package" version="1.642">perl-dbi</requirement>
        <requirement type="package" version="4.046">perl-dbd-mysql</requirement>
        <requirement type="package" version="4.58">perl-config-simple</requirement>
        <requirement type="package" version="2.11.0">blast</requirement>
        <requirement type="package" version="2.6.3">prodigal</requirement>
        <requirement type="package" version="3.6.0">r</requirement>
    </requirements>
    <!-- basic error handling -->
    <stdio>
        <!-- Assume anything other than zero is an error -->
        <exit_code range="1:" level="fatal" description="Tool exception" />
        <exit_code range=":-1" level="fatal" description="Tool exception" />
    </stdio>
    <command>
<![CDATA[
    #if $species == "Escherichia coli":
        perl 
        $__tool_directory__/PHANtC-Ec.pl
          '${",".join(map(str, $input1))}'
          $input_id
          $serotype
          $phantcec_allele
          $phantcec_json
          $phantcec_tree
          $phantcec_dm
    #else
        touch $phantcec_allele
        touch $phantcec_json
        touch $phantcec_tree
        touch $phantcec_dm
    #end if
]]>
    </command>

    <inputs>
        <param name="input1" format="fasta" type="data" multiple="true" label="fasta file" />
        <param name="input_id" type="text" label="IRIDA sample code" />
        <param name="serotype" format="txt" type="data" label="O serotype" />
        <param name="species" type="text" label="Expected species name" />
    </inputs>

    <!-- define outputs -->
    <outputs>
        <data format="tsv" name="phantcec_allele" label="${tool.name} on ${on_string}: allele calls" ></data>
        <data format="json" name="phantcec_json" label="${tool.name} on ${on_string}: allele filter" ></data>
        <data format="nwk" name="phantcec_tree" label="${tool.name} on ${on_string}: clustering" ></data>
        <data format="tsv" name="phantcec_dm" label="${tool.name} on ${on_string}: distance matrix" ></data>
   </outputs>
</tool>
