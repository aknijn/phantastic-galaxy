<tool id="phantq" name="PHANtQ" version="3.0">
    <description>Contamination check</description>
    <requirements>
        <requirement type="package" version="3.0.2">kmerfinder</requirement>
    </requirements>
    <!-- basic error handling -->
    <stdio>
        <!-- Assume anything other than zero is an error -->
        <exit_code range="1:" level="fatal" description="Tool exception" />
        <exit_code range=":-1" level="fatal" description="Tool exception" />
    </stdio>
    <command>
<![CDATA[
    #if str( $input_pc.reverse.name ) == "dummy.fastq":
        ln -fs ${input_pc.forward} $input_id &&
        #set $input_files = $input_id
    #else
        #if str( $input_pc.forward.name ) == "dummy.fastq":
            ln -fs ${input_pc.reverse} $input_id &&
            #set $input_files = $input_id
        #else
            ln -fs ${input_pc.forward} $input_id + "_R1" &&
            ln -fs ${input_pc.reverse} $input_id + "_R2" &&
            #set $input_files = $input_id + "_R1 " + $input_id + "_R2"
        #end if
    #end if

    python
    $__tool_directory__/PHANtQ.py  
        --input $input_files
        --species $species
        --contamination_json $phantq_json
        --contamination_txt $phantq_contamination
]]>
    </command>

    <inputs>
        <param name="species" type="text" label="species name" />
        <param name="input_pc" type="data_collection"  format="fastqsanger" collection_type="paired" label="Paired-end FASTQ collection" help="Must be of datatype &quot;fastqsanger&quot;" optional="false" />
        <param name="input_id" type="text" label="IRIDA sample code" />
   </inputs>

    <!-- define outputs -->
    <outputs>
        <data format="json" name="phantq_json" label="${tool.name} on ${on_string}: contamination check" />
        <data format="txt" name="phantq_contamination" label="${tool.name} on ${on_string}: contamination txt" />
   </outputs>
</tool>
